name: Docker Image CI
on:
  push:
    branches: [ "main" ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v3
    
    # JDK 21 설정 (Dockerfile에 맞게 조정)
    - name: JDK 21 설정
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    
    # Gradle 캐싱 (빌드 속도 향상)
    - name: Gradle 캐싱
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    # Gradle 권한 부여
    - name: Gradle 권한 부여
      run: chmod +x ./gradlew
    
    # application.yml 생성
    - name: application.yml 생성
      run: |
        cat > src/main/resources/application.yml << EOF
        spring:
          datasource:
            url: ${{ secrets.DB_URL_PROD }}
            username: ${{ secrets.DB_USERNAME }}
            password: ${{ secrets.DB_PASSWORD }}
            driver-class-name: com.mysql.cj.jdbc.Driver
            hikari:
              connection-timeout: 60000
              maximum-pool-size: 5
              minimum-idle: 2
              idle-timeout: 300000
              max-lifetime: 1200000
              connection-test-query: SELECT 1
          jpa:
            hibernate:
              ddl-auto: update
            properties:
              hibernate:
                format_sql: false
          mail:
            host: smtp.gmail.com
            port: 587
            username: ${{ secrets.MAIL_USERNAME }}
            password: ${{ secrets.MAIL_PASSWORD }}
            properties:
              mail:
                smtp:
                  auth: true
                  starttls:
                    enable: true
        logging.level:
          org.hibernate.SQL: debug
          org.hibernate.orm.jdbc.bind: trace
        jwt:
          secret: ${{ secrets.JWT_SECRET }}
          accessExpiration: 3600000
          refreshExpiration: 604800000
          emailExpiration: 600000
        EOF
    
    # Gradle로 빌드 실행
    - name: Gradle 빌드
      run: ./gradlew clean build
    
    # Docker Hub 로그인
    - name: Docker Hub 로그인
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    # Docker Buildx 설정 (멀티 플랫폼 빌드 지원)
    - name: Docker Buildx 설정
      uses: docker/setup-buildx-action@v2
    
    # Docker 빌드 및 푸시 (기존 Dockerfile 사용)
    - name: Docker 빌드 및 푸시
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-app:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-app:${{ github.sha }}

# main 브랜치로 pull request가 생겼을 때 실핻
# 빌드 파일 생성함으로써 빌드 실행 잘 되는지 테스트하는 workflow
name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-verification:
    runs-on: ubuntu-latest
    
    steps:
    # 코드 체크아웃
    - uses: actions/checkout@v3
    
    # JDK 21 설정
    - name: JDK 21 설정
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
    
    # Gradle 캐싱 (빌드 속도 향상)
    - name: Gradle 캐싱
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    # Gradle 권한 부여
    - name: Gradle 권한 부여
      run: chmod +x ./gradlew

    # 테스트용 application.yml 생성 (개발 환경용)
    - name: application.yml 생성
      env:
        YAML_CONTENT: ${{secrets.YAML_PROD}}
      run: |
        mkdir -p src/main/resources
        echo "$YAML_CONTENT" > src/main/resources/application.yml
    
    # Gradle로 빌드 검증
    - name: Gradle 빌드 검증
      run: ./gradlew clean build
